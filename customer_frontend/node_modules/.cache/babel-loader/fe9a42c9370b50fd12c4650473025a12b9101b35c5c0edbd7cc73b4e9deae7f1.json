{"ast":null,"code":"var _jsxFileName = \"/Users/amahitiarachchi/Downloads/SysDevPr/customer_frontend/src/pages/Bill.jsx\",\n  _s = $RefreshSig$();\nimport { Alert, Spinner, Table } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsByUser = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const token = localStorage.getItem('token'); // Fetch token directly from localStorage\n      if (!token) {\n        setError('Not authorized. Please log in.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:4000/api/quotation/get_job',\n        // Backend URL for fetching jobs\n        {},\n        // No need to send any body since the token is in headers\n        {\n          headers: {\n            token\n          }\n        } // Send token in headers\n        );\n        setJobs(response.data.jobs);\n      } catch (err) {\n        if (err.response && err.response.status === 401) {\n          setError('Unauthorized. Please log in again.');\n        } else {\n          setError('Error fetching jobs. Please try again later.');\n        }\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []); // Empty dependency array means it runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-9\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), !loading && !error && jobs.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: \"No jobs found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), !loading && !error && jobs.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Finish Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.job_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(job.start_date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.finish_date ? new Date(job.finish_date).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)]\n            }, job.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsByUser, \"FLh5dEUz1hBb5Vd3UWoHSNXKM04=\");\n_c = JobsByUser;\nexport default JobsByUser;\nvar _c;\n$RefreshReg$(_c, \"JobsByUser\");","map":{"version":3,"names":["Alert","Spinner","Table","React","useEffect","useState","axios","jsxDEV","_jsxDEV","JobsByUser","_s","jobs","setJobs","loading","setLoading","error","setError","fetchJobs","token","localStorage","getItem","response","post","headers","data","err","status","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","animation","variant","length","striped","bordered","hover","responsive","map","job","id","job_name","Date","start_date","toLocaleDateString","finish_date","_c","$RefreshReg$"],"sources":["/Users/amahitiarachchi/Downloads/SysDevPr/customer_frontend/src/pages/Bill.jsx"],"sourcesContent":["import { Alert, Spinner, Table } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nconst JobsByUser = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const token = localStorage.getItem('token'); // Fetch token directly from localStorage\r\n      if (!token) {\r\n        setError('Not authorized. Please log in.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          'http://localhost:4000/api/quotation/get_job', // Backend URL for fetching jobs\r\n          {}, // No need to send any body since the token is in headers\r\n          { headers: { token } } // Send token in headers\r\n        );\r\n        setJobs(response.data.jobs);\r\n      } catch (err) {\r\n        if (err.response && err.response.status === 401) {\r\n          setError('Unauthorized. Please log in again.');\r\n        } else {\r\n          setError('Error fetching jobs. Please try again later.');\r\n        }\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []); // Empty dependency array means it runs only once when the component mounts\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5\">\r\n      <div className=\"row\">\r\n        {/* Sidebar */}\r\n        <div className=\"col-md-1\">\r\n          {/* Adjust this part to match your sidebar styling */}\r\n        </div>\r\n\r\n        {/* Main content */}\r\n        <div className=\"col-md-9\">\r\n          <h2>Jobs</h2>\r\n\r\n          {loading && (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n            </div>\r\n          )}\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n          {!loading && !error && jobs.length === 0 && (\r\n            <Alert variant=\"info\">No jobs found.</Alert>\r\n          )}\r\n\r\n          {!loading && !error && jobs.length > 0 && (\r\n            <Table striped bordered hover responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Job ID</th>\r\n                  <th>Job Name</th>\r\n                  <th>Start Date</th>\r\n                  <th>Finish Date</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {jobs.map((job) => (\r\n                  <tr key={job.id}>\r\n                    <td>{job.id}</td>\r\n                    <td>{job.job_name}</td>\r\n                    <td>{new Date(job.start_date).toLocaleDateString()}</td>\r\n                    <td>\r\n                      {job.finish_date\r\n                        ? new Date(job.finish_date).toLocaleDateString()\r\n                        : 'N/A'}\r\n                    </td>\r\n                    <td>{job.status}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsByUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}